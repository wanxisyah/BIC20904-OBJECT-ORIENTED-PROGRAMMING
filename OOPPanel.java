package OOP;


import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class OOPPanel extends javax.swing.JFrame {
    
    Connection con = null;
    ResultSet rs=null;
    PreparedStatement ps=null;
    
    public OOPPanel() {
        initComponents();
        con = JConnection.ConnectDB();
        refreshtable();
        refreshtable2();
        
    }
    
    public void refreshtable(){
        try{
            
            con=JConnection.ConnectDB();
            ps=con.prepareStatement("select *from properties_listings");
            rs =ps.executeQuery();
            DefaultTableModel tm = (DefaultTableModel)tblproperty.getModel();
            tm.setRowCount(0);
            
            while(rs.next()){
                Object o[]= {rs.getString("House_Name"), rs.getString("House_Address"), rs.getString("Availability"), rs.getString("Status")};
                tm.addRow(o);
                
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    public void refreshtable2(){
        try{
            
            con=JConnection.ConnectDB();
            ps=con.prepareStatement("select *from properties_listings");
            rs =ps.executeQuery();
            DefaultTableModel tm = (DefaultTableModel)tblproperty2.getModel();
            tm.setRowCount(0);
            
            while(rs.next()){
                Object o[]= {rs.getString("House_Name"), rs.getString("House_Address"), rs.getString("Availability"), rs.getString("Status")};
                tm.addRow(o);
                
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    public void refreshpendingtable(){
        try{
            con=JConnection.ConnectDB();
            ps=con.prepareStatement("select *from guestbook where status='Not Booked' ");
            rs=ps.executeQuery();
            DefaultTableModel tm = (DefaultTableModel)tblpending.getModel();
            tm.setRowCount(0);
            
            while(rs.next()){
                Object o[]= {rs.getInt("id"), rs.getString("name"), rs.getString("room"), rs.getString("checkin"), rs.getString("checkout")};
                tm.addRow(o);
            } 
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }
    }
    public void refreshhistorytable(){
        try{
            con=JConnection.ConnectDB();
            ps=con.prepareStatement("select *from guestbook where status='Booked' ");
            rs=ps.executeQuery();
            DefaultTableModel tm = (DefaultTableModel)tblhistory.getModel();
            tm.setRowCount(0);
            
            while(rs.next()){
                Object o[]= {rs.getInt("id"), rs.getString("name"), rs.getString("room"), rs.getString("checkin"), rs.getString("checkout"),rs.getString("Status")};
                tm.addRow(o);
            } 
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpanel = new javax.swing.JPanel();
        hometab = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblproperty = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        housenametextfield = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        houseaddresstextfield = new javax.swing.JTextField();
        lblAvailable2 = new javax.swing.JLabel();
        chkavailable2 = new javax.swing.JCheckBox();
        btnUpdate = new javax.swing.JButton();
        pendingbookingtab = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblpending = new javax.swing.JTable();
        bookingidfield = new javax.swing.JTextField();
        custnamefield = new javax.swing.JTextField();
        housefield = new javax.swing.JTextField();
        outfield = new javax.swing.JTextField();
        infield = new javax.swing.JTextField();
        Bookingidlbl = new javax.swing.JLabel();
        custnamelbl = new javax.swing.JLabel();
        housenamelbl = new javax.swing.JLabel();
        chckinlbl = new javax.swing.JLabel();
        chkoutlbl = new javax.swing.JLabel();
        confirmbtn = new javax.swing.JButton();
        bookinghistorytab = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblhistory = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        addhousetab = new javax.swing.JPanel();
        addhouseHeader = new javax.swing.JLabel();
        listingnamefield = new javax.swing.JTextField();
        addressfield = new javax.swing.JTextField();
        listingname = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        btnaddtolisting = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblproperty2 = new javax.swing.JTable();
        lblAvailable = new javax.swing.JLabel();
        chkavailable = new javax.swing.JCheckBox();
        Sidemenu = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnPendingbooking = new javax.swing.JButton();
        btnBookingrecord = new javax.swing.JButton();
        btnaddhouse = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        myButton1 = new Project.MyButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainpanel.setBackground(new java.awt.Color(204, 204, 204));
        mainpanel.setPreferredSize(new java.awt.Dimension(1172, 768));
        mainpanel.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        jLabel1.setText("Home");

        tblproperty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "House Name", "House Address", "Availability", "Status"
            }
        ));
        tblproperty.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblpropertyMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblproperty);

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel5.setText("Edit Listing");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        housenametextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                housenametextfieldActionPerformed(evt);
            }
        });

        jLabel6.setText("House Name");

        jLabel7.setText("House Address");

        lblAvailable2.setText("Room Status");

        chkavailable2.setText("Tick if Available");
        chkavailable2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkavailable2ActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hometabLayout = new javax.swing.GroupLayout(hometab);
        hometab.setLayout(hometabLayout);
        hometabLayout.setHorizontalGroup(
            hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hometabLayout.createSequentialGroup()
                .addGroup(hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hometabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(hometabLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1019, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(hometabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(hometabLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(housenametextfield)
                            .addComponent(houseaddresstextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hometabLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnUpdate)
                    .addComponent(lblAvailable2))
                .addGap(37, 37, 37)
                .addGroup(hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkavailable2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(103, 103, 103))
        );
        hometabLayout.setVerticalGroup(
            hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hometabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate))
                .addGap(18, 18, 18)
                .addGroup(hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(housenametextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(20, 20, 20)
                .addGroup(hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailable2)
                    .addComponent(chkavailable2))
                .addGap(1, 1, 1)
                .addGroup(hometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(houseaddresstextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        mainpanel.add(hometab, "hometab");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        jLabel3.setText("Pending Bookings");

        tblpending.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Booking ID", "Customer Name", "House Name", "Check-in Date", "Check-out Date"
            }
        ));
        tblpending.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblpendingMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblpending);

        bookingidfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingidfieldActionPerformed(evt);
            }
        });

        infield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infieldActionPerformed(evt);
            }
        });

        Bookingidlbl.setText("Booking ID");

        custnamelbl.setText("Customer Name");

        housenamelbl.setText("House Name");

        chckinlbl.setText("Check-In");

        chkoutlbl.setText("Check-Out");

        confirmbtn.setText("Confirm Booking");
        confirmbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pendingbookingtabLayout = new javax.swing.GroupLayout(pendingbookingtab);
        pendingbookingtab.setLayout(pendingbookingtabLayout);
        pendingbookingtabLayout.setHorizontalGroup(
            pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pendingbookingtabLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1033, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(pendingbookingtabLayout.createSequentialGroup()
                .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pendingbookingtabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(pendingbookingtabLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Bookingidlbl)
                            .addComponent(custnamelbl)
                            .addComponent(housenamelbl))
                        .addGap(29, 29, 29)
                        .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(custnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pendingbookingtabLayout.createSequentialGroup()
                                .addComponent(bookingidfield, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(108, 108, 108)
                                .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkoutlbl)
                                    .addComponent(chckinlbl)))
                            .addComponent(housefield, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24)
                .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(infield, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outfield, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmbtn)
                .addGap(67, 67, 67))
        );
        pendingbookingtabLayout.setVerticalGroup(
            pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pendingbookingtabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(housefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(housenamelbl))
                    .addGroup(pendingbookingtabLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookingidfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Bookingidlbl))
                        .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pendingbookingtabLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(custnamelbl)
                                    .addComponent(custnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(confirmbtn))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pendingbookingtabLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(chckinlbl)
                                    .addComponent(infield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)))
                        .addGroup(pendingbookingtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkoutlbl)
                            .addComponent(outfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        mainpanel.add(pendingbookingtab, "checkbookingtab");

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        jLabel4.setText("Booking Records History");

        tblhistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Booking ID", "Customer Name", "Room", "Check In", "Check Out", "Status"
            }
        ));
        jScrollPane3.setViewportView(tblhistory);

        jButton1.setText("Refresh");

        javax.swing.GroupLayout bookinghistorytabLayout = new javax.swing.GroupLayout(bookinghistorytab);
        bookinghistorytab.setLayout(bookinghistorytabLayout);
        bookinghistorytabLayout.setHorizontalGroup(
            bookinghistorytabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookinghistorytabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookinghistorytabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookinghistorytabLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap(650, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookinghistorytabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookinghistorytabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bookinghistorytabLayout.setVerticalGroup(
            bookinghistorytabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookinghistorytabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(17, 17, 17)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        mainpanel.add(bookinghistorytab, "bookingrecordtab");

        addhouseHeader.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        addhouseHeader.setText("Add New Listing");

        listingnamefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listingnamefieldActionPerformed(evt);
            }
        });

        addressfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressfieldActionPerformed(evt);
            }
        });

        listingname.setText("Listing Name");

        address.setText("Address");

        btnaddtolisting.setText("Add To Listing");
        btnaddtolisting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddtolistingActionPerformed(evt);
            }
        });

        btnclear.setText("Clear Fields");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        tblproperty2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "House Name", "House Address", "Availability", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblproperty2);

        lblAvailable.setText("Availability");

        chkavailable.setText("Tick if Available");
        chkavailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkavailableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addhousetabLayout = new javax.swing.GroupLayout(addhousetab);
        addhousetab.setLayout(addhousetabLayout);
        addhousetabLayout.setHorizontalGroup(
            addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addhousetabLayout.createSequentialGroup()
                .addGroup(addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addhousetabLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addhouseHeader)
                            .addGroup(addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnaddtolisting)
                                .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addhousetabLayout.createSequentialGroup()
                                    .addGroup(addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(listingname)
                                        .addComponent(lblAvailable))
                                    .addGap(47, 47, 47)
                                    .addGroup(addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chkavailable, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(addhousetabLayout.createSequentialGroup()
                                            .addComponent(listingnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(47, 47, 47)
                                            .addComponent(address)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(addressfield, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(0, 0, Short.MAX_VALUE)))))
                    .addGroup(addhousetabLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        addhousetabLayout.setVerticalGroup(
            addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addhousetabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addhouseHeader)
                .addGap(42, 42, 42)
                .addGroup(addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addhousetabLayout.createSequentialGroup()
                        .addGroup(addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(listingname)
                                .addComponent(address))
                            .addGroup(addhousetabLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(addressfield, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)
                        .addGroup(addhousetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAvailable)
                            .addComponent(chkavailable)))
                    .addComponent(listingnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(btnaddtolisting)
                .addGap(18, 18, 18)
                .addComponent(btnclear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        mainpanel.add(addhousetab, "edithousetab");

        Sidemenu.setBackground(new java.awt.Color(55, 71, 79));

        btnHome.setBackground(new java.awt.Color(113, 135, 146));
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnPendingbooking.setBackground(new java.awt.Color(113, 135, 146));
        btnPendingbooking.setText("Pending Bookings");
        btnPendingbooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPendingbookingActionPerformed(evt);
            }
        });

        btnBookingrecord.setBackground(new java.awt.Color(113, 135, 146));
        btnBookingrecord.setText("Booking Records");
        btnBookingrecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookingrecordActionPerformed(evt);
            }
        });

        btnaddhouse.setBackground(new java.awt.Color(113, 135, 146));
        btnaddhouse.setText("Add Listing");
        btnaddhouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddhouseActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Guest House Reservation Admin System");

        myButton1.setText("Log Out");
        myButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SidemenuLayout = new javax.swing.GroupLayout(Sidemenu);
        Sidemenu.setLayout(SidemenuLayout);
        SidemenuLayout.setHorizontalGroup(
            SidemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidemenuLayout.createSequentialGroup()
                .addGroup(SidemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SidemenuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(SidemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPendingbooking, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBookingrecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnaddhouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(SidemenuLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(SidemenuLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(myButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SidemenuLayout.setVerticalGroup(
            SidemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SidemenuLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addGap(32, 32, 32)
                .addComponent(btnaddhouse)
                .addGap(33, 33, 33)
                .addComponent(btnPendingbooking)
                .addGap(30, 30, 30)
                .addComponent(btnBookingrecord)
                .addGap(256, 256, 256)
                .addComponent(myButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Sidemenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1061, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sidemenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBookingrecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookingrecordActionPerformed
        CardLayout card = (CardLayout)mainpanel.getLayout();
        card.show(mainpanel,"bookingrecordtab");
        refreshhistorytable();
    }//GEN-LAST:event_btnBookingrecordActionPerformed

    private void btnPendingbookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPendingbookingActionPerformed
        CardLayout card = (CardLayout)mainpanel.getLayout();
        card.show(mainpanel,"checkbookingtab");
        refreshpendingtable();
        
    }//GEN-LAST:event_btnPendingbookingActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        CardLayout card = (CardLayout)mainpanel.getLayout();
        card.show(mainpanel,"hometab");
        refreshtable();
       
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnaddhouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddhouseActionPerformed
        CardLayout card = (CardLayout)mainpanel.getLayout();
        card.show(mainpanel,"edithousetab");
        refreshtable2();
    }//GEN-LAST:event_btnaddhouseActionPerformed

    private void addressfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressfieldActionPerformed
       
    }//GEN-LAST:event_addressfieldActionPerformed

    private void listingnamefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listingnamefieldActionPerformed
    }//GEN-LAST:event_listingnamefieldActionPerformed

    private void btnaddtolistingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddtolistingActionPerformed
        
        
        String availability;
        String status="Not Booked";
        if(chkavailable.isSelected()){
            availability = "Yes";
        }
        else{
            availability= "No";
        }
        try{
            
            con=JConnection.ConnectDB();
            
            String sql = "insert into properties_listings values(?,?,?,?)";
            ps = con.prepareStatement(sql);
            ps.setString(1, listingnamefield.getText());
            ps.setString(2, addressfield.getText());
            ps.setString(3, availability);
            ps.setString(4,status);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null,"Listing Successfully Added!");
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        } 
        refreshtable2();
    }//GEN-LAST:event_btnaddtolistingActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        
        listingnamefield.setText("");
        addressfield.setText("");
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        String sql="delete from properties_listings where House_Name = ? ";
        try{
            ps=con.prepareStatement(sql);
            ps.setString(1, housenametextfield.getText());
            ps.execute(); 
            JOptionPane.showMessageDialog(this,"Successfully Deleted!");
            refreshtable();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }
        
      
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void housenametextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_housenametextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_housenametextfieldActionPerformed

    private void tblpropertyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblpropertyMouseClicked
        
        DefaultTableModel dtm=(DefaultTableModel)tblproperty.getModel();
        int i=tblproperty.getSelectedRow();
        String s1=dtm.getValueAt(i, 0).toString();
        String s2=dtm.getValueAt(i, 1).toString();
        String s3=dtm.getValueAt(i,2).toString();
        housenametextfield.setText(s1);
        houseaddresstextfield.setText(s2);
        if(s3.equals("Yes")){
            chkavailable2.setSelected(true);
        }
        else{
            chkavailable2.setSelected(false);
        }  
    }//GEN-LAST:event_tblpropertyMouseClicked

    private void chkavailable2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkavailable2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkavailable2ActionPerformed

    private void chkavailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkavailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkavailableActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
         
        String houseaddress=houseaddresstextfield.getText();
        String housename=housenametextfield.getText();
        String availability;
        if(chkavailable2.isSelected()){
            availability="Yes";
        }
        else{
             availability="No";   
        }
        
        try{
            con=JConnection.ConnectDB();
            ps= con.prepareStatement("select *from properties_listings");
            ps.executeUpdate("update properties_listings set House_Name='"+housename+"', House_Address='"+houseaddress+"',Availability='"+availability+"' where House_Address='"+houseaddress+"'");
            JOptionPane.showMessageDialog(null, "Successfully Updated");
            refreshtable();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void bookingidfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingidfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingidfieldActionPerformed

    private void infieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_infieldActionPerformed

    private void tblpendingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblpendingMouseClicked
        
        DefaultTableModel tm=(DefaultTableModel)tblpending.getModel();
        int i=tblpending.getSelectedRow();
        String s1=tm.getValueAt(i, 0).toString();
        String s2=tm.getValueAt(i, 1).toString();
        String s3=tm.getValueAt(i,2).toString();
        String s4=tm.getValueAt(i,3).toString();
        String s5=tm.getValueAt(i,4).toString();
        bookingidfield.setText(s1);
        custnamefield.setText(s2);
        housefield.setText(s3);
        infield.setText(s4);
        outfield.setText(s5);
        
    }//GEN-LAST:event_tblpendingMouseClicked

    private void confirmbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmbtnActionPerformed
        String idbook = bookingidfield.getText();
        String sql="select from guestbook where id = ? ";
        try{
            con=JConnection.ConnectDB();
            ps= con.prepareStatement(sql);
            ps.executeUpdate("update guestbook set Status='Booked' where id ='"+idbook+"'  ");
            JOptionPane.showMessageDialog(null, "Successfully Updated");
            refreshtable();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }
        refreshpendingtable();
        
        
    }//GEN-LAST:event_confirmbtnActionPerformed

    private void myButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton1ActionPerformed
       //log out
        int a = JOptionPane.showConfirmDialog(null, "Do you want to log out??" , "Select",JOptionPane.YES_NO_OPTION);
                 if(a==0)
                 { 
                    setVisible(false);
                    new Welcome().setVisible(true);
                 }
    }//GEN-LAST:event_myButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OOPPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OOPPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OOPPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OOPPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OOPPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bookingidlbl;
    private javax.swing.JPanel Sidemenu;
    private javax.swing.JLabel addhouseHeader;
    private javax.swing.JPanel addhousetab;
    private javax.swing.JLabel address;
    private javax.swing.JTextField addressfield;
    private javax.swing.JPanel bookinghistorytab;
    private javax.swing.JTextField bookingidfield;
    private javax.swing.JButton btnBookingrecord;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnPendingbooking;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnaddhouse;
    private javax.swing.JButton btnaddtolisting;
    private javax.swing.JButton btnclear;
    private javax.swing.JLabel chckinlbl;
    private javax.swing.JCheckBox chkavailable;
    private javax.swing.JCheckBox chkavailable2;
    private javax.swing.JLabel chkoutlbl;
    private javax.swing.JButton confirmbtn;
    private javax.swing.JTextField custnamefield;
    private javax.swing.JLabel custnamelbl;
    private javax.swing.JPanel hometab;
    private javax.swing.JTextField houseaddresstextfield;
    private javax.swing.JTextField housefield;
    private javax.swing.JLabel housenamelbl;
    private javax.swing.JTextField housenametextfield;
    private javax.swing.JTextField infield;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAvailable;
    private javax.swing.JLabel lblAvailable2;
    private javax.swing.JLabel listingname;
    private javax.swing.JTextField listingnamefield;
    private javax.swing.JPanel mainpanel;
    private Project.MyButton myButton1;
    private javax.swing.JTextField outfield;
    private javax.swing.JPanel pendingbookingtab;
    private javax.swing.JTable tblhistory;
    private javax.swing.JTable tblpending;
    private javax.swing.JTable tblproperty;
    private javax.swing.JTable tblproperty2;
    // End of variables declaration//GEN-END:variables
}
